{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,YAAaC,SAASC,cAAc,UAGlCC,EAAS,KAkCb,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BT,EAASU,YAAW,WACdN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA1CPP,EAAKC,YAAYc,iBAAiB,UAIlC,SAAsBC,GACpBA,EAAIC,iBACJC,aAAad,GAEb,IAAgCe,EAAAH,EAAII,OAAOC,SAAnCC,EAAwBH,EAAxBZ,MAAOgB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAYC,OAAOJ,EAAMK,OAE7B,GAAIL,EAAMK,MAAQ,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,EAEtD,YADA7B,EAAA8B,OAAOC,QAAS,qCAIlB/B,EAAA8B,OAAOE,QAAQ,4CAEf,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAOG,MAAOI,GAAK,EACtC1B,EAAc0B,EAAGN,GACdO,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBT,EAAA8B,OAAOE,QAAQ,sBAAqCI,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE3D4B,OAAM,SAAAF,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBT,EAAA8B,OAAOC,QAAQ,qBAAoCK,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE7DkB,GAAaC,OAAOH,EAAKI,OAG3BX,EAAIoB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  formInputEl: document.querySelector('.form'),\n};\n\nlet timeId = null;\n\nrefs.formInputEl.addEventListener('submit', onFormSubmit);\n\n/** functions */\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  clearTimeout(timeId);\n\n  const { delay, step, amount } = evt.target.elements;\n  let stepValue = Number(delay.value);\n\n  if (delay.value < 1 || step.value < 1 || amount.value < 1) {\n    Notify.failure(`All fields must be more than zero`);\n    return;\n  }\n\n  Notify.success('Please observe the promises appear below');\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, stepValue)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise #${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise #${position} in ${delay}ms`);\n      });\n    stepValue += Number(step.value);\n  }\n\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timeId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formInputEl","document","querySelector","$ce04d3a99e08e73b$var$timeId","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","clearTimeout","_elements","target","elements","delay1","step","amount","stepValue","Number","value","Notify","failure","success","i","then","param","concat","catch","currentTarget","reset"],"version":3,"file":"03-promises.8f49d5e9.js.map"}