{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,YAAaC,SAASC,cAAc,UAGtC,IAAIC,EAAS,KAkCb,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BT,EAASU,YAAW,KACdN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1CbP,EAAKC,YAAYc,iBAAiB,UAIlC,SAAsBC,GACpBA,EAAIC,iBACJC,aAAad,GAEb,MAAQG,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAIM,OAAOC,SAC3C,IAAIC,EAAYC,OAAON,EAAMO,OAE7B,GAAIP,EAAMO,MAAQ,GAAKN,EAAKM,MAAQ,GAAKL,EAAOK,MAAQ,EAEtD,YADA5B,EAAA6B,OAAOC,QAAQ,qCAIjB9B,EAAA6B,OAAOE,QAAQ,4CAEf,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAOK,MAAOI,GAAK,EACtCzB,EAAcyB,EAAGN,GACdO,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA6B,OAAOE,QAAQ,sBAAsBvB,QAAeC,MAAU,IAE/DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBT,EAAA6B,OAAOC,QAAQ,qBAAqBtB,QAAeC,MAAU,IAEjEiB,GAAaC,OAAOL,EAAKM,OAG3BV,EAAIiB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  formInputEl: document.querySelector('.form'),\n};\n\nlet timeId = null;\n\nrefs.formInputEl.addEventListener('submit', onFormSubmit);\n\n/** functions */\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  clearTimeout(timeId);\n\n  const { delay, step, amount } = evt.target.elements;\n  let stepValue = Number(delay.value);\n\n  if (delay.value < 1 || step.value < 1 || amount.value < 1) {\n    Notify.failure(`All fields must be more than zero`);\n    return;\n  }\n\n  Notify.success('Please observe the promises appear below');\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, stepValue)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise #${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise #${position} in ${delay}ms`);\n      });\n    stepValue += Number(step.value);\n  }\n\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timeId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formInputEl","document","querySelector","$47d4ff9957288465$var$timeId","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","clearTimeout","delay1","step","amount","target","elements","stepValue","Number","value","Notify","failure","success","i","then","catch","currentTarget","reset"],"version":3,"file":"03-promises.aa85279c.js.map"}